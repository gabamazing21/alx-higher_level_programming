# 2-matix_divided.txt

==============================
How to use 2-matrix_divided.py
==============================
This library is simple it has only one function
''matrix_divided()'' it divide all element of a matrixs

How it works
==============
''matrix_divided()'' return the list of result of matrix of element divided
by a divisor
::
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	>>> matrix = [[1, 2, 3],[4, 5, 6]]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
	>>> matrix_divided(matrix, 1e100)
	Traceback (most recent call last):
		...
	OverflowError: div is too large
	>>> matrix_divided(matrix)
	Traceback (most recent call last):
		...
	TypeError: matrix_divided() missing 1 required positional argument: 'div'
	>>> matrix_divided()
	Traceback (most recent call last):
		...
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
	>>> matrix_divided(matrix, 'a')
	Traceback (most recent call last):
		...
	TypeError: div must be a number
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
		...
	ZeroDivisionError: division by zero
	>>> matrix = [[1, 'a', 'b'],[1, 3, 5]]
	>>> matrix_divided(matrix, 4)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
	>>> matrix = [[1], [1,3.5]]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
		...
	TypeError: Each row of the matrix must have the same size
